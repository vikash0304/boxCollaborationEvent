/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.paychex.pcdcmsgproc.boxCollaborationEvent.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class BoxCollaborationEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5484239881671663454L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BoxCollaborationEvent\",\"namespace\":\"com.paychex.pcdcmsgproc.boxCollaborationEvent.schema\",\"fields\":[{\"name\":\"eventId\",\"type\":\"int\",\"default\":-1},{\"name\":\"eventType\",\"type\":\"string\",\"default\":null},{\"name\":\"eventTimestamp\",\"type\":\"long\",\"default\":100},{\"name\":\"collaboratorId\",\"type\":\"int\",\"default\":-1},{\"name\":\"collaboratorName\",\"type\":\"string\",\"default\":null},{\"name\":\"fileId\",\"type\":\"string\",\"default\":null},{\"name\":\"fileName\",\"type\":\"string\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BoxCollaborationEvent> ENCODER =
      new BinaryMessageEncoder<BoxCollaborationEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BoxCollaborationEvent> DECODER =
      new BinaryMessageDecoder<BoxCollaborationEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<BoxCollaborationEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<BoxCollaborationEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BoxCollaborationEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this BoxCollaborationEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a BoxCollaborationEvent from a ByteBuffer. */
  public static BoxCollaborationEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int eventId;
  @Deprecated public java.lang.CharSequence eventType;
  @Deprecated public long eventTimestamp;
  @Deprecated public int collaboratorId;
  @Deprecated public java.lang.CharSequence collaboratorName;
  @Deprecated public java.lang.CharSequence fileId;
  @Deprecated public java.lang.CharSequence fileName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BoxCollaborationEvent() {}

  /**
   * All-args constructor.
   * @param eventId The new value for eventId
   * @param eventType The new value for eventType
   * @param eventTimestamp The new value for eventTimestamp
   * @param collaboratorId The new value for collaboratorId
   * @param collaboratorName The new value for collaboratorName
   * @param fileId The new value for fileId
   * @param fileName The new value for fileName
   */
  public BoxCollaborationEvent(java.lang.Integer eventId, java.lang.CharSequence eventType, java.lang.Long eventTimestamp, java.lang.Integer collaboratorId, java.lang.CharSequence collaboratorName, java.lang.CharSequence fileId, java.lang.CharSequence fileName) {
    this.eventId = eventId;
    this.eventType = eventType;
    this.eventTimestamp = eventTimestamp;
    this.collaboratorId = collaboratorId;
    this.collaboratorName = collaboratorName;
    this.fileId = fileId;
    this.fileName = fileName;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventId;
    case 1: return eventType;
    case 2: return eventTimestamp;
    case 3: return collaboratorId;
    case 4: return collaboratorName;
    case 5: return fileId;
    case 6: return fileName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventId = (java.lang.Integer)value$; break;
    case 1: eventType = (java.lang.CharSequence)value$; break;
    case 2: eventTimestamp = (java.lang.Long)value$; break;
    case 3: collaboratorId = (java.lang.Integer)value$; break;
    case 4: collaboratorName = (java.lang.CharSequence)value$; break;
    case 5: fileId = (java.lang.CharSequence)value$; break;
    case 6: fileName = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'eventId' field.
   * @return The value of the 'eventId' field.
   */
  public java.lang.Integer getEventId() {
    return eventId;
  }

  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.Integer value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the 'eventType' field.
   * @return The value of the 'eventType' field.
   */
  public java.lang.CharSequence getEventType() {
    return eventType;
  }

  /**
   * Sets the value of the 'eventType' field.
   * @param value the value to set.
   */
  public void setEventType(java.lang.CharSequence value) {
    this.eventType = value;
  }

  /**
   * Gets the value of the 'eventTimestamp' field.
   * @return The value of the 'eventTimestamp' field.
   */
  public java.lang.Long getEventTimestamp() {
    return eventTimestamp;
  }

  /**
   * Sets the value of the 'eventTimestamp' field.
   * @param value the value to set.
   */
  public void setEventTimestamp(java.lang.Long value) {
    this.eventTimestamp = value;
  }

  /**
   * Gets the value of the 'collaboratorId' field.
   * @return The value of the 'collaboratorId' field.
   */
  public java.lang.Integer getCollaboratorId() {
    return collaboratorId;
  }

  /**
   * Sets the value of the 'collaboratorId' field.
   * @param value the value to set.
   */
  public void setCollaboratorId(java.lang.Integer value) {
    this.collaboratorId = value;
  }

  /**
   * Gets the value of the 'collaboratorName' field.
   * @return The value of the 'collaboratorName' field.
   */
  public java.lang.CharSequence getCollaboratorName() {
    return collaboratorName;
  }

  /**
   * Sets the value of the 'collaboratorName' field.
   * @param value the value to set.
   */
  public void setCollaboratorName(java.lang.CharSequence value) {
    this.collaboratorName = value;
  }

  /**
   * Gets the value of the 'fileId' field.
   * @return The value of the 'fileId' field.
   */
  public java.lang.CharSequence getFileId() {
    return fileId;
  }

  /**
   * Sets the value of the 'fileId' field.
   * @param value the value to set.
   */
  public void setFileId(java.lang.CharSequence value) {
    this.fileId = value;
  }

  /**
   * Gets the value of the 'fileName' field.
   * @return The value of the 'fileName' field.
   */
  public java.lang.CharSequence getFileName() {
    return fileName;
  }

  /**
   * Sets the value of the 'fileName' field.
   * @param value the value to set.
   */
  public void setFileName(java.lang.CharSequence value) {
    this.fileName = value;
  }

  /**
   * Creates a new BoxCollaborationEvent RecordBuilder.
   * @return A new BoxCollaborationEvent RecordBuilder
   */
  public static com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder newBuilder() {
    return new com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder();
  }

  /**
   * Creates a new BoxCollaborationEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BoxCollaborationEvent RecordBuilder
   */
  public static com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder newBuilder(com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder other) {
    return new com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder(other);
  }

  /**
   * Creates a new BoxCollaborationEvent RecordBuilder by copying an existing BoxCollaborationEvent instance.
   * @param other The existing instance to copy.
   * @return A new BoxCollaborationEvent RecordBuilder
   */
  public static com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder newBuilder(com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent other) {
    return new com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder(other);
  }

  /**
   * RecordBuilder for BoxCollaborationEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BoxCollaborationEvent>
    implements org.apache.avro.data.RecordBuilder<BoxCollaborationEvent> {

    private int eventId;
    private java.lang.CharSequence eventType;
    private long eventTimestamp;
    private int collaboratorId;
    private java.lang.CharSequence collaboratorName;
    private java.lang.CharSequence fileId;
    private java.lang.CharSequence fileName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[2].schema(), other.eventTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.collaboratorId)) {
        this.collaboratorId = data().deepCopy(fields()[3].schema(), other.collaboratorId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.collaboratorName)) {
        this.collaboratorName = data().deepCopy(fields()[4].schema(), other.collaboratorName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fileId)) {
        this.fileId = data().deepCopy(fields()[5].schema(), other.fileId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fileName)) {
        this.fileName = data().deepCopy(fields()[6].schema(), other.fileName);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing BoxCollaborationEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.eventId)) {
        this.eventId = data().deepCopy(fields()[0].schema(), other.eventId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventType)) {
        this.eventType = data().deepCopy(fields()[1].schema(), other.eventType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventTimestamp)) {
        this.eventTimestamp = data().deepCopy(fields()[2].schema(), other.eventTimestamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.collaboratorId)) {
        this.collaboratorId = data().deepCopy(fields()[3].schema(), other.collaboratorId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.collaboratorName)) {
        this.collaboratorName = data().deepCopy(fields()[4].schema(), other.collaboratorName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.fileId)) {
        this.fileId = data().deepCopy(fields()[5].schema(), other.fileId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.fileName)) {
        this.fileName = data().deepCopy(fields()[6].schema(), other.fileName);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'eventId' field.
      * @return The value.
      */
    public java.lang.Integer getEventId() {
      return eventId;
    }

    /**
      * Sets the value of the 'eventId' field.
      * @param value The value of 'eventId'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setEventId(int value) {
      validate(fields()[0], value);
      this.eventId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventId' field has been set.
      * @return True if the 'eventId' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventId' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearEventId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventType' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventType() {
      return eventType;
    }

    /**
      * Sets the value of the 'eventType' field.
      * @param value The value of 'eventType'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setEventType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.eventType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventType' field has been set.
      * @return True if the 'eventType' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventType' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearEventType() {
      eventType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTimestamp' field.
      * @return The value.
      */
    public java.lang.Long getEventTimestamp() {
      return eventTimestamp;
    }

    /**
      * Sets the value of the 'eventTimestamp' field.
      * @param value The value of 'eventTimestamp'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setEventTimestamp(long value) {
      validate(fields()[2], value);
      this.eventTimestamp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTimestamp' field has been set.
      * @return True if the 'eventTimestamp' field has been set, false otherwise.
      */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eventTimestamp' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearEventTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'collaboratorId' field.
      * @return The value.
      */
    public java.lang.Integer getCollaboratorId() {
      return collaboratorId;
    }

    /**
      * Sets the value of the 'collaboratorId' field.
      * @param value The value of 'collaboratorId'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setCollaboratorId(int value) {
      validate(fields()[3], value);
      this.collaboratorId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'collaboratorId' field has been set.
      * @return True if the 'collaboratorId' field has been set, false otherwise.
      */
    public boolean hasCollaboratorId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'collaboratorId' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearCollaboratorId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'collaboratorName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCollaboratorName() {
      return collaboratorName;
    }

    /**
      * Sets the value of the 'collaboratorName' field.
      * @param value The value of 'collaboratorName'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setCollaboratorName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.collaboratorName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'collaboratorName' field has been set.
      * @return True if the 'collaboratorName' field has been set, false otherwise.
      */
    public boolean hasCollaboratorName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'collaboratorName' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearCollaboratorName() {
      collaboratorName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileId' field.
      * @return The value.
      */
    public java.lang.CharSequence getFileId() {
      return fileId;
    }

    /**
      * Sets the value of the 'fileId' field.
      * @param value The value of 'fileId'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setFileId(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.fileId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'fileId' field has been set.
      * @return True if the 'fileId' field has been set, false otherwise.
      */
    public boolean hasFileId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'fileId' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearFileId() {
      fileId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'fileName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFileName() {
      return fileName;
    }

    /**
      * Sets the value of the 'fileName' field.
      * @param value The value of 'fileName'.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder setFileName(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.fileName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'fileName' field has been set.
      * @return True if the 'fileName' field has been set, false otherwise.
      */
    public boolean hasFileName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'fileName' field.
      * @return This builder.
      */
    public com.paychex.pcdcmsgproc.boxCollaborationEvent.schema.BoxCollaborationEvent.Builder clearFileName() {
      fileName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BoxCollaborationEvent build() {
      try {
        BoxCollaborationEvent record = new BoxCollaborationEvent();
        record.eventId = fieldSetFlags()[0] ? this.eventId : (java.lang.Integer) defaultValue(fields()[0]);
        record.eventType = fieldSetFlags()[1] ? this.eventType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.eventTimestamp = fieldSetFlags()[2] ? this.eventTimestamp : (java.lang.Long) defaultValue(fields()[2]);
        record.collaboratorId = fieldSetFlags()[3] ? this.collaboratorId : (java.lang.Integer) defaultValue(fields()[3]);
        record.collaboratorName = fieldSetFlags()[4] ? this.collaboratorName : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.fileId = fieldSetFlags()[5] ? this.fileId : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.fileName = fieldSetFlags()[6] ? this.fileName : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BoxCollaborationEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<BoxCollaborationEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BoxCollaborationEvent>
    READER$ = (org.apache.avro.io.DatumReader<BoxCollaborationEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
